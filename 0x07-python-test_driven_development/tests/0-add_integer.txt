=================================
using 0-add_integer.txt
=================================

importing add_integer function

>>> add_integer = __import__('0-add_integer').add_integer

This library is very simple, since it only has one function called
``add_integer()``
::

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

It also works with foating-points
::

>>> add_integer(100.3, -2)
98

Non-number 
============

``add_integer()`` raise a TypeError if one of the arguments is a
not integer or float.
::

>>> add_integer(4, "school")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...

TypeError: a must be an integer

>>> add_integer(float('inf'), 8)
Traceback (most recent call last)
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last)
...
ValueError: cannot convert float NaN to integer
